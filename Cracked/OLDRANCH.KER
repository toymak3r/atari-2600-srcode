


RANCHSCREEN:
	WSYNC
	HMOVE
	STAI	$FF,PF1	;5;
	STA	PF2	
	lda	#WHITE
	sta	COLUP0
	ldx	#7
	VDELOFFBL

	WSYNC
	HMOVE
RANCHLOOP:
	STAI	0,GRP0		;5;
	STA	GRP1		;3;
	DEX			;2;
	LDA	X,SIDECURSOR1	;4;20
	

	STA	SIDECURSOR	;3;23
	LDA	X,SPLATSIZE1	;4;27
	STA	SPLATSIZE	;3;30
	LDA	X,SPLATHMOVE1	;4;34
	STA	SPLATHMOVE	;3;37
	LDA	X,RK1SIZE	;4;
	TAY			;2;
WALLOOP:	
	WSYNC		;3;
	HMOVE			;3;3
	LDA	@SIDECURSOR(Y)	;5;5
	STA	CTRLPF		;3;8
	LSR			;2;10
	LSR			;2;12
	STA	ENABL		;3;15
	STAI	$FF,PF1		;5;20
	STA	PF2		;3;23
	LDA	@SPLATHMOVE(Y)	;5;28
	STA	HMM0		;3;31
	STA	ENAM0		;3;34
	LDA	@SPLATSIZE(Y)	;5;39
	STA	NUSIZ0		;3;44
	lda	BCTAB,Y
	sta	COLUPF
	DEY			;2;41
	BNE	WALLOOP		;3;47
	
	WSYNC			;5;67
	HMOVE			;3;3
	LDA	@SIDECURSOR(Y)	;5;8
	STA	CTRLPF		;3;11
	LSR			;2;13
	LSR			;2;15
	STA	ENABL		;3;18

				;
	DEX			;2;20
	BMI	EXITROOST	;2;22
	LDA	X,SIDECURSOR1	;4;24

	STA	SIDECURSOR	;3;27
		
	LDA	@SPLATHMOVE(Y)	;5;32
	STA	HMM0		;3;35
	STA	ENAM0		;3;38
	LDA	@SPLATSIZE(Y)	;5;43
	STA	NUSIZ0		;3;46
	LDA	X,SPLATSIZE1	;4;50
	STA	SPLATSIZE	;3;53
	LDA	X,SPLATHMOVE1	;4;57
	STA	SPLATHMOVE	;3;60
	LDA	X,RK1SIZE	;4;64
	TAY			;2;66
	LDA	@SIDECURSOR(Y)	;5;71
	WSYNC			;3;
	HMOVE			;3;3
	STA	CTRLPF		;3;6
	LSR			;2;8
	LSR			;2;10
	STA	ENABL		;3;13
	DEY
	CPX	#3		;2;15
	BNE	.GO		;2/3;17/18
	STAI	$C3,PF1		;5;22
	STAI	$30,PF2		;5;27
	JMP	.GO1		;3;30
.GO:	STAI	$84,PF1		;5;23
	STA	PF2		;5;28
;first rooster
.GO1:				;28\30




ROOSTERLOOP:	
	WSYNC		;3;76
	HMOVE			;3;3
	LDA	@SIDECURSOR(Y)	;5;8
	STA	CTRLPF		;3;11
	LSR			;2;13
	LSR			;2;15
	STA	ENABL		;3;18
	LDA	@SPLATHMOVE(Y)	;5;23
	STA	HMM0		;3;26
	STA	ENAM0		;3;29
	LDA	@SPLATSIZE(Y)	;5;34
	STA	NUSIZ0		;3;37
	CPX	r_da_one	;3;40
	bne	.nope		;2/3;42/43
	LDA	@CHICKEN1DATA(Y) ;5;47
	STA	GRP0		;3;50
	LDA	@CHICKEN2DATA(Y) ;5;55
	STA	GRP1		;3;58
	LDA	@CHICKENCOLOR(Y) ;5;63
	STA	COLUP1		;3;66
.nope:	DEY			;2;45/68
	BNE	ROOSTERLOOP	;3;72		;LAST BYTE OF CHICKEN NOT
						;CLOCKED OUT
	WSYNC
	HMOVE
	LDA	@SIDECURSOR(Y)	;5;8
	STA	CTRLPF		;3;11
	LSR			;2;13
	LSR			;2;15
	STA	ENABL		;3;18
	STAI	$FF,PF1		;5;23
	STA	PF2		;3;26

	JMP	RANCHLOOP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

EXITROOST: WSYNC
	HMOVE
	VBLANKON
	WSYNC			;3;76
	HMOVE			;3;3
	LDY	R_BRD1DELPTR  	;4;7
	NOP			;2;9
	LDA	R_BRD1HMOVE	;4;13
.DELAYLOP:	DEY		;2;15
	BNE	.DELAYLOP	;3/2;17
	STA	HMP0		;3;20
	STA	RESP0		;3;23

	WSYNC		;3;75
	HMOVE			;3;3

	STAI	$0,GRP0
	STA	GRP1
	STA	PF1
	STA	PF2
	STA	ENAM0
	STA	ENABL
	STA	NUSIZ0
	STA	NUSIZ1
	lda	#BARNCOLOR
	sta	COLUP0

;	WASTE3
;	WASTE3
	LDY	#8
	HMCLR
.LOOP:	WSYNC
	HMOVE
	VBLANKOFF
	LDA	Y,BOTCURTAB
	STA	GRP0
	DEY
	BPL	.LOOP

	STAI	0,GRP0
	STA	GRP1
	STA	REFP0	;5;69
	STA	REFP1
	STAI	WHITE,COLUP0
	sta	COLUP1
	STAI	$40,HMP1
	STAI	$30,HMP0
	WSYNC
	HMOVE

	LDY 	#4
HHH:	WSYNC
	STAI 	$0,COLUBK
	dey
	bpl	HHH

	STAI 	$12,COLUBK
	jsr	RLOAD_SIX
	VDELONP0
	VDELONP1
	STAI	3,NUSIZ0
	STA	NUSIZ1
	LDY	#7		;2;2
	WSYNC	;LINE2
.LOP:	DEY			;2;4
	BNE	.LOP		;2/3;6
  	WASTE3			;3;37
	sta	RESP0		;3;40
	sta	RESP1		;3;43
.list
RS:

RSCORE_KER:
	LDY	#7
	STY	TEMP
RSCORELOOP:
	LDA	@DIGIT2(Y)	;5;71
	TAX			;2;73
	WSYNC			;3;76
;	WASTE3			;3;3
	LDA	@DIGIT1(Y) 	;5;8
	STA	TEMP1		;3;11
	LDA	@DIGIT6(Y)	;5;16
	STA	GRP0		;3;19
	LDA	@DIGIT5(Y)	;5;24
	STA	GRP1		;3;27
	LDA	@DIGIT4(Y) 	;5;32
	STA	GRP0		;3;35
	LDA	@DIGIT3(Y) 	;5;40
	LDY	TEMP1		;3;43
	STA	GRP1		;3;46
	STX	GRP0		;3;49
	STY	GRP1		;3;52
	STA	GRP0		;3;55
	DEC	TEMP		;5;60
	ldy	TEMP		;3;63
	BPL	RSCORELOOP	;3;66
RCLRPL:


	LDA	#00		;2
	STA	GRP0		;3
	STA	GRP1		;3    
	STA	GRP0		;3

	VDELOFFP0
	VDELOFFP1
	STAI	0,NUSIZ0
	STA	NUSIZ1

	LDY 	#4
HHH2:	WSYNC
	STAI 	$64,COLUBK
	dey
	bpl	HHH2

	WSYNC
	HMOVE		;3;3
	VBLANKON	;5;8
	PTR	OVERSCAN,BANKJMP
	JMP	ROMJMP5

.nlist

RLOAD_SIX:
	lda	#RNUM0/$100
	STA	DIGIT1+1
	STA	DIGIT2+1
	STA	DIGIT3+1
	STA	DIGIT4+1
	STA	DIGIT5+1
	STA	DIGIT6+1
	lda	#RNUM1 & $FF
	STA	DIGIT1
	STA	DIGIT2
	STA	DIGIT3
	lda	#REGG1 & $FF
	STA	DIGIT4
	STA	DIGIT5
	STA	DIGIT6	
	rts

;.nlist



RK1SIZE: 
	.DC.B	ERK7SIZE
	.DC.B	ERK6SIZE
	.DC.B	ERK5SIZE
	.DC.B	ERK4SIZE
	.DC.B	ERK3SIZE
	.DC.B	ERK2SIZE
	.DC.B	ERK1SIZE

BOTCURTAB:	.DC.B	$7F
		.DC.B	$3E
		.DC.B	$1C
		.DC.B	$1C
		.DC.B	$8
		.DC.B	$8
		.DC.B	$8
		.DC.B	$8
		.DC.B	$0



XRENEST1END =32
XRENEST2END =52
XRENEST3END =72
XRENEST4END =96
XRENEST5END =116
XRENEST6END =136

XRENEST7END =37
XRENEST8END =61
XRENEST9END =85
XRENEST10END =109
XRENEST11END =133

XRENEST12END =32
XRENEST13END =52
XRENEST14END =72
XRENEST15END =96
XRENEST16END =116
XRENEST17END =136

XRENEST1START =24
XRENEST2START =44
XRENEST3START =64
XRENEST4START =88
XRENEST5START =108
XRENEST6START =128

XRENEST7START =28
XRENEST8START =52
XRENEST9START =76
XRENEST10START =100
XRENEST11START =124

XRENEST12START =24
XRENEST13START =44
XRENEST14START =64
XRENEST15START =88
XRENEST16START =108
XRENEST17START =128

RANCHTOPKER:
	.DC.B	8		;NUMBER OF KERNALS + 1	
	.DC.B	ETRESCRNSTART	;START OF EACH KERNAL
	.DC.B	ERNEST1START;-1
	.DC.B	ERNEST1END-1
	.DC.B	ERNEST2START;-1;+1

	.DC.B 	ERNEST2END-1
	.DC.B	ERNEST3START;-1;+1
	.DC.B	ERNEST3END-1
	.dc.b	0

RKERSIZETBL:
	.DC.B	ERK1SIZE		;SIZE OF EACH KERNAL
	.DC.B	ERK2SIZE;+1
	.DC.B	ERK3SIZE;-1
	.DC.B	ERK4SIZE;+1
	.DC.B	ERK5SIZE;-1
	.DC.B	ERK6SIZE;+1
	.DC.B	ERK7SIZE;-1


BCTAB:
	.dc.b	$32
	.dc.b	$34
	.dc.b	$36
	.dc.b	$38
	.dc.b	$3a
	.dc.b	$38
	.dc.b	$36
	.dc.b	$34
	.dc.b	$32
	.dc.b	$32
